{"version":3,"sources":["view/CanvasView.ts","sprites/Ball.ts","sprites/Paddle.ts","Collision.ts","setup.ts","sprites/Brick.ts","helpers.ts","index.ts"],"names":[],"mappings":"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","file":"src.d9e64c53.map","sourceRoot":"../src","sourcesContent":["// Types\nimport { Ball } from \"../sprites/Ball\";\nimport { Brick } from \"../sprites/Brick\";\nimport { Paddle } from \"../sprites/Paddle\";\n\nexport class CanvasView {\n    canvas: HTMLCanvasElement;\n    private context: CanvasRenderingContext2D | null;\n    private scoreDisplay: HTMLObjectElement | null;\n    private start: HTMLObjectElement | null;\n    private info: HTMLObjectElement | null;\n\n    constructor(canvasName: string) {\n        this.canvas = document.querySelector(canvasName) as HTMLCanvasElement;\n        this.context = this.canvas.getContext('2d');\n        this.scoreDisplay = document.querySelector('#score');\n        this.start = document.querySelector('#start');\n        this.info = document.querySelector('#info');\n    }\n\n    clear(): void {\n        this.context?.clearRect(0,0,this.canvas.width,this.canvas.height);\n    }\n\n    initStartButton(startFunction: (view:CanvasView) => void): void {\n        this.start?.addEventListener('click', () => startFunction(this));\n    }\n\n    drawScore(score: number): void {\n        if (this.scoreDisplay) this.scoreDisplay.innerHTML = score.toString();\n    }\n\n    drawInfo(text: string): void {\n        if (this.info) this.info.innerHTML = text;\n    }\n\n    drawSprite(brick: Brick | Paddle | Ball): void {\n        if (!brick) return;\n\n        this.context?.drawImage(\n            brick.image,\n            brick.pos.x,\n            brick.pos.y,\n            brick.width,\n            brick.height\n        );\n    }\n\n    drawBricks(bricks: Brick[]): void {\n        bricks.forEach(brick => this.drawSprite(brick));\n    }\n}\n","import {Vector} from '../types';\n\nexport class Ball {\n  private speed: Vector;\n  private ballImage: HTMLImageElement = new Image();\n\n  constructor(\n    speed: number,\n    private ballSize: number,\n    private position: Vector,\n    image: string\n  ) {\n    this.ballSize = ballSize;\n    this.position = position;\n    this.speed = {\n      x: speed,\n      y: -speed\n    };\n    this.ballImage.src = image;\n  }\n\n  // Getters\n  get width(): number {\n    return this.ballSize;\n  }\n\n  get height(): number {\n    return this.ballSize;\n  }\n\n  get pos(): Vector {\n    return this.position;\n  }\n\n  get image(): HTMLImageElement {\n    return this.ballImage;\n  }\n\n  // Methods\n  changeYDirection(): void {\n    this.speed.y = -this.speed.y;\n  }\n\n  changeXDirection(): void {\n    this.speed.x = -this.speed.x;\n  }\n\n  moveBall(): void {\n    this.pos.x += this.speed.x;\n    this.pos.y += this.speed.y;\n  }\n}\n","import {Vector} from '../types';\n\nexport class Paddle {\n  private paddleImage: HTMLImageElement = new Image();\n  private moveLeft: boolean;\n  private moveRight: boolean;\n\n  constructor(\n    private speed: number,\n    private paddleWidth: number,\n    private paddleHeight: number,\n    private position: Vector,\n    image: string\n  ) {\n    this.speed = speed;\n    this.paddleWidth = paddleWidth;\n    this.paddleHeight = paddleHeight;\n    this.position = position;\n    this.moveLeft = false;\n    this.moveRight = false;\n    this.paddleImage.src = image;\n\n    // Event Listeners\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  // Getters\n  get width(): number {\n    return this.paddleWidth;\n  }\n\n  get height(): number {\n    return this.paddleHeight;\n  }\n\n  get pos(): Vector {\n    return this.position;\n  }\n\n  get image(): HTMLImageElement {\n    return this.paddleImage;\n  }\n\n  get isMovingLeft(): boolean {\n    return this.moveLeft;\n  }\n\n  get isMovingRight(): boolean {\n    return this.moveRight;\n  }\n\n  movePaddle(): void {\n    if (this.moveLeft) this.pos.x -= this.speed;\n    if (this.moveRight) this.pos.x += this.speed;\n  }\n\n  handleKeyUp = (e: KeyboardEvent): void => {\n    if (e.code === \"ArrowLeft\" || e.key === \"ArrowLeft\") this.moveLeft = false;\n    if (e.code === \"ArrowRight\" || e.key === \"ArrowRight\") this.moveRight = false;\n  }\n\n  handleKeyDown = (e: KeyboardEvent): void => {\n    if (e.code === \"ArrowLeft\" || e.key === \"ArrowLeft\") this.moveLeft = true;\n    if (e.code === \"ArrowRight\" || e.key === \"ArrowRight\") this.moveRight = true;\n  }\n}\n","// Types\nimport {Brick} from './sprites/Brick';\nimport {Paddle} from './sprites/Paddle';\nimport {Ball} from './sprites/Ball';\nimport {CanvasView} from './view/CanvasView';\n\nexport class Collision {\n  isCollidingBrick(ball: Ball, brick: Brick): boolean {\n    if (\n      ball.pos.x < brick.pos.x + brick.width &&\n      ball.pos.x + ball.width > brick.pos.x &&\n      ball.pos.y < brick.pos.y + brick.height &&\n      ball.pos.y + ball.height > brick.pos.y\n    ) {\n      return true;\n    }\n    return false;\n  }\n  // Check ball collision with bricks\n  isCollidingBricks(ball: Ball, bricks: Brick[]): boolean {\n    let colliding = false;\n\n    bricks.forEach((brick, i) => {\n      if (this.isCollidingBrick(ball, brick)) {\n        ball.changeYDirection();\n\n        if (brick.energy === 1) {\n          bricks.splice(i, 1);\n        } else {\n          brick.energy -= 1;\n        }\n        colliding = true;\n      }\n    })\n    return colliding;\n  }\n  checkBallCollision(ball: Ball, paddle: Paddle, view: CanvasView): void {\n    // 1. Check ball collision with paddle\n    if (\n      ball.pos.x + ball.width > paddle.pos.x &&\n      ball.pos.x < paddle.pos.x + paddle.width &&\n      ball.pos.y + ball.height === paddle.pos.y\n    ) {\n      ball.changeYDirection();\n    }\n    // 2. Check ball collision with walls\n    // Ball movement X constraints\n    if (ball.pos.x > view.canvas.width - ball.width || ball.pos.x < 0) {\n      ball.changeXDirection();\n    }\n    // Ball movement Y constraints\n    if (ball.pos.y < 0) {\n      ball.changeYDirection();\n    }\n  }\n}\n","import RED_BRICK_IMAGE from './images/brick-red.png';\nimport BLUE_BRICK_IMAGE from './images/brick-blue.png';\nimport GREEN_BRICK_IMAGE from './images/brick-green.png';\nimport YELLOW_BRICK_IMAGE from './images/brick-yellow.png';\nimport PURPLE_BRICK_IMAGE from './images/brick-purple.png';\n\n// Grab the canvas element for calculating the brick width\n// depending on canvas width\nconst canvas: HTMLCanvasElement | null = document.querySelector('#playField');\n\n// Constants\nexport const STAGE_PADDING = 10;\nexport const STAGE_ROWS = 20;\nexport const STAGE_COLS = 10;\nexport const BRICK_PADDING = 5;\nexport const BRICK_WIDTH = canvas\n  ? Math.floor((canvas.width - STAGE_PADDING * 2) / STAGE_COLS) - BRICK_PADDING\n  : 100;\nexport const BRICK_HEIGHT = canvas\n  ? Math.floor((canvas.height - STAGE_PADDING * 2) / STAGE_ROWS) - BRICK_PADDING\n  : 30;\nexport const PADDLE_WIDTH = 150;\nexport const PADDLE_HEIGHT = 25;\nexport const PADDLE_STARTX = 450;\nexport const PADDLE_SPEED = 10;\nexport const BALL_SPEED = 5;\nexport const BALL_SIZE = 20;\nexport const BALL_STARTX = 500;\nexport const BALL_STARTY = 400;\n\nexport const BRICK_IMAGES: { [key: number]: string } = {\n  1: RED_BRICK_IMAGE,\n  2: GREEN_BRICK_IMAGE,\n  3: YELLOW_BRICK_IMAGE,\n  4: BLUE_BRICK_IMAGE,\n  5: PURPLE_BRICK_IMAGE\n};\n\nexport const BRICK_ENERGY: { [key: number]: number } = {\n  1: 1, // Red brick\n  2: 1, // Green brick\n  3: 2, // Yellow brick\n  4: 2, // Blue brick\n  5: 3 // Purple brick\n};\n\n// prettier-ignore\nexport const LEVEL = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n  0, 2, 2, 2, 2, 2, 2, 2, 2, 0,\n  0, 3, 3, 3, 3, 3, 3, 3, 3, 0,\n  0, 0, 4, 4, 4, 4, 4, 4, 0, 0,\n  0, 0, 5, 5, 0, 0, 5, 5, 0, 0,\n];\n","import {Vector} from '../types';\n\nexport class Brick {\n  private brickImage: HTMLImageElement = new Image();\n\n  constructor(\n    private brickWidth: number,\n    private brickHeight: number,\n    private position: Vector,\n    private brickEnergy: number,\n    image: string\n  ) {\n    this.brickWidth = brickWidth;\n    this.brickHeight = brickHeight;\n    this.position = position;\n    this.brickEnergy = brickEnergy;\n    this.brickImage.src = image;\n  }\n\n  // Getters\n  get width(): number {\n    return this.brickWidth;\n  }\n\n  get height(): number {\n    return this.brickHeight;\n  }\n\n  get pos(): Vector {\n    return this.position;\n  }\n\n  get image(): HTMLImageElement {\n    return this.brickImage;\n  }\n\n  get energy(): number {\n    return this.brickEnergy;\n  }\n\n  // Setter\n  set energy(energy: number) {\n    this.brickEnergy = energy;\n  }\n}\n","import {Brick} from './sprites/Brick';\nimport {\n  BRICK_IMAGES,\n  LEVEL,\n  STAGE_COLS,\n  STAGE_PADDING,\n  BRICK_WIDTH,\n  BRICK_HEIGHT,\n  BRICK_PADDING,\n  BRICK_ENERGY\n} from './setup';\n\nexport function createBricks(): Brick[] {\n  return LEVEL.reduce((ack, element, i) => {\n    const row = Math.floor((i + 1) / STAGE_COLS);\n    const col = i % STAGE_COLS;\n\n    const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\n    const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\n\n    if (element === 0) return ack;\n\n    return [\n      ...ack,\n      new Brick(\n        BRICK_WIDTH,\n        BRICK_HEIGHT,\n        {x, y},\n        BRICK_ENERGY[element],\n        BRICK_IMAGES[element]\n      )\n    ];\n  }, [] as Brick[]);\n}\n","import {CanvasView} from './view/CanvasView';\nimport {Ball} from './sprites/Ball';\nimport {Brick} from './sprites/Brick';\nimport {Paddle} from './sprites/Paddle';\nimport {Collision} from './Collision';\n\n// Images\nimport PADDLE_IMAGE from './images/paddle.png';\nimport BALL_IMAGE from './images/ball.png';\n\n// Level and colors\nimport {\n  PADDLE_SPEED,\n  PADDLE_WIDTH,\n  PADDLE_HEIGHT,\n  PADDLE_STARTX,\n  BALL_SPEED,\n  BALL_SIZE,\n  BALL_STARTX,\n  BALL_STARTY\n} from './setup';\n\n// Helpers\nimport {createBricks} from './helpers';\n\nlet gameOver = false;\nlet score = 0;\n\nfunction setGameOver(view: CanvasView) {\n  view.drawInfo('Game Over!');\n  gameOver = false;\n}\n\nfunction setGameWin(view: CanvasView) {\n  view.drawInfo('Game Won!');\n  gameOver = false;\n}\n\nfunction gameLoop(\n  view: CanvasView,\n  bricks: Brick[],\n  paddle: Paddle,\n  ball: Ball,\n  collision: Collision\n) {\n  // console.log('draw');\n  view.clear();\n  view.drawBricks(bricks);\n  view.drawSprite(paddle);\n  view.drawSprite(ball);\n  // Move Ball\n  ball.moveBall();\n\n  // Move paddle and check so it won't exit the playfield\n  if (\n    (paddle.isMovingLeft && paddle.pos.x > 0) ||\n    (paddle.isMovingRight && paddle.pos.x < view.canvas.width - paddle.width)\n  ) {\n    paddle.movePaddle();\n  }\n\n  collision.checkBallCollision(ball, paddle, view);\n  const collidingBrick = collision.isCollidingBricks(ball, bricks);\n\n  if (collidingBrick) {\n    score += 1;\n    view.drawScore(score);\n  }\n\n  // Game Over when ball leave playfield\n  if (ball.pos.y > view.canvas.height) gameOver = true;\n  // If game won, set gameOver and display win\n  if (bricks.length === 0) return setGameWin(view);\n  // Return if gameover and don't run the requestAnimationFrame\n  if (gameOver) return setGameOver(view);\n\n  requestAnimationFrame(() => gameLoop(view, bricks, paddle, ball, collision));\n}\n\nfunction startGame(view: CanvasView) {\n  // Reset displays\n  score = 0;\n  view.drawInfo('');\n  view.drawScore(0);\n  // Create a collision instance\n  const collision = new Collision();\n  // Create all bricks\n  const bricks = createBricks();\n  // Create a Ball\n  const ball = new Ball(\n    BALL_SPEED,\n    BALL_SIZE,\n    { x: BALL_STARTX, y: BALL_STARTY},\n    BALL_IMAGE\n  )\n  // Create a paddle\n  const paddle = new Paddle(\n    PADDLE_SPEED,\n    PADDLE_WIDTH,\n    PADDLE_HEIGHT,\n    {\n      x: PADDLE_STARTX,\n      y: view.canvas.height - PADDLE_HEIGHT - 5\n    },\n    PADDLE_IMAGE\n  )\n\n\n  gameLoop(view, bricks, paddle, ball, collision);\n}\n\n// Create a new view\nconst view = new CanvasView('#playField');\nview.initStartButton(startGame);\n"]}